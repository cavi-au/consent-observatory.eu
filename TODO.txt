

forbedringer af webscraber tool.

1. Improve scraper blocking workarounds: the more popular websites have ways to detect scrapers and block them,
which has stopped me from being able to collect data on them. I was hoping workarounds could be implemented.
Perhaps the Node-Unblocker library might be something easy to add? https://scrapfly.io/blog/web-scraping-with-node-unblocker/

2. URL resolution: the library currently doesn't cycle through different protocols when one of them doesn't work,
e.g., try both http, https, and www. I currently manually adjust this in the page-analyzer.js file ,
but it would be good if this could just be built in.

I think both of these adjustments would reduce the number of errors I currently get. I've attached a recent error log to show the kind of things I run into.
se zenhub fil fra midas


TODO disable submit button while submitting new analysis form, enable again when form change, e.g. when errors occur etc.
- check the enhance settings, but maybe it is easier just to listen for on:submit on the
  form and then disable the button and then on form change in a reactive statement re-enable the button

TODO unser /admin/status
vis alle jobs, og ved delete event fjern fra array af jobs der vises...


SE MIDAS email ang forside og about side..., der er også nogle asset filer...
lav også Help side se tlf..

web-scraper update
- update alle dependencies og test, få midas til at teste
- lav _ til #
- så den default'er til https i stedet for http ved ingen protokol, og så næste strategi er http
- test nogle af den fejl midas sendte, kan de afhjælpes?
- OPDATER user-agent til en nutidig, lav så den kan sættes som option
- push til npm, og integrer i denne app


# ruleset ui
tjek RULES_DIR og et niveau ned
for __ui.json filer, kun de mapper (rod og subdir) der har en __ui.json får loadet deres rules
__ui.json har
- name, description, sortOrder, options: [] // options er valgfrit og order er valgfrit, de andre skal være sat., hvis der ikke er sat sortOrder sorterer den på name, så bliver sortOrder default int.MAX
Lav en klasse RuleSet, tjek at navne er unikke ved load, da de skal bruges som keys
- den indeholder name, description, sortOrder, uiOptions [], og rules
Det er dem som loades ind i WebExtractor executor og som man kan få fat i til at lave ui.

Hvis det er mere end 1 RuleSet laves dropdown og alt efter hvad der er valgt vises description og nedenunder options.
options i __ui.json er array af objekter med { type: "checkbox|radio", name: string| string[]} hvis det er radio skal det være et array af strings eller bare en enkel streng, valider det
Dissse generes i ui alt efter hvad der er valgt for et RuleSet,
På serveren gives options med som et objekt til executoren, som giver dem med til hver rules init() funktion, så kan Midas selv bruge input til hvad han vil. DOKUMENTER dette.
- options og ruleSet-name skal så gemmes sammen med Job, så de kan loades, de skal også vises på status-side.

Hvis der kun er et RuleSet vises dropdown ikke, men bare options, (hvis de er sat)
